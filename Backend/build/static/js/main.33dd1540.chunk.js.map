{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Notification","message","className","App","useState","persons","setPersons","newName","setNewName","newNumber","setnewNumber","namefilter","setnamefilter","messagenotif","setmessagenotif","names","map","person","name","toLocaleLowerCase","useEffect","axios","get","then","response","console","log","data","Person","props","number","id","type","onClick","handleDelete","personsList","filter","includes","toLowerCase","handleSubmit","event","preventDefault","alert","replace","match","p1","p2","toUpperCase","post","concat","setTimeout","catch","error","p","person1","per","window","confirm","delete","removeId","onSubmit","onChange","target","value","handleChangeFilter","handleChangeName","handleChangeNumber","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33dd1540.chunk.js","sourcesContent":["import React from 'react'\nimport {useState} from 'react'\nimport {useEffect} from 'react'\nimport axios from 'axios'\n\n\nconst Notification =({message}) =>{\n  if(message === null){\n    return null\n  }\nreturn(\n  <div className ='error'>\n    {message}\n  </div>\n)\n}\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setnewNumber] = useState(\"\")\n  const [namefilter, setnamefilter] = useState(\"\")\n  const [messagenotif, setmessagenotif] = useState(null)\n  const names = persons.map(person => {\n    return person.name.toLocaleLowerCase();\n  });\n//this code gets the data directly from the db.json and uses it and the data gets acted omn this itself\n    //console.log('effect')\n  useEffect(() => { \n    axios\n      .get('http://localhost:3001/api/persons')\n      .then(response => {\n        console.log(response.data)\n        setPersons(response.data)\n      })\n  }, [])\n\n  const Person = props =>{\n    return(\n      <div>\n        {props.name} {props.number} {props.id}\n        <button type=\"submit\" onClick={()=>{console.log(props);handleDelete(props.id)}}>delete</button>\n      </div>\n    )\n  }\n  const filteredPersons = persons.filter(person => {\n    return person.name.toLocaleLowerCase().includes(namefilter.toLowerCase());\n  });\n\n  const personsList = filteredPersons.map(person => {\n      return (<Person key={person.name} name={person.name} number={person.number} id = {person.id}/>\n\n      );\n    });\n    \n  const handleChangeName = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleChangeNumber = event =>{\n    setnewNumber(event.target.value);\n  }\n\n  const handleChangeFilter = event =>{\n    setnamefilter(event.target.value)\n  }\n\n  const createPerson = () =>{\n    const replacer = (match, p1, p2) => {\n      return p1.toUpperCase() + p2.toLocaleLowerCase();\n    };\n\n    const titleCasedName = newName.replace(/\\b([a-zA-Z])(\\w+)/g, replacer);\n\n    const person = {\n      name: titleCasedName,\n      number: newNumber\n    };\n   return person;\n  }\n\n  /*const updatePerson = () =>{\n    const person2 = persons.find(p => p.name === newName)\n    const updatenum = window.confirm(`${person2.name} is already added to the phonebook. Do you want to replace the number?`);\n    if(updatenum){\n      const updatedPerson = { ...person2, number: newNumber };\n      const id = person2.id;\n      NoteService\n      .updateAll(id, updatedPerson)\n      .then(returnedPerson => {\n      setPersons(persons.map(p => (p.id !== id ? p : returnedPerson)));\n  }}\n}*/\n\n  const handleSubmit = (event,id) => {\n    event.preventDefault();\n\n    if (names.includes(newName.toLocaleLowerCase())) {\n      alert(`${newName} is already added`)\n    } \n    else {\n      const person = createPerson();\n      axios\n        .post('http://localhost:3001/api/persons',person)\n        .then(response => {\n        setPersons(persons.concat(response.data))\n        setmessagenotif(`${person.name} was added`)\n        setNewName(\"\");\n        setnewNumber(\"\")\n        setTimeout(() =>{\n          setmessagenotif(null)},5000)\n        \n      })\n      .catch(error =>{\n        setmessagenotif(`This person ${person} was not able to get added`)\n        setTimeout(() =>{\n          setmessagenotif(null)},5000)\n          setPersons(persons.filter(p => p.id!==id))\n      })\n\n      //setNewName(\"\");\n      //setnewNumber(\"\")\n  }\n}\n \nconst removeId = (id) =>{\n          axios\n             .delete(`http://localhost:3001/api/persons/${id}`)\n             .then(response =>{\n             setPersons(persons.filter(response => response.id !== id)) \n             })\n             .catch(error =>{\n               console.log('The person could not be deleted tbh')\n             })\n             \n             \n}\n\nconst handleDelete = (id) =>{\n  \n  const person1 = persons.filter(p => p.id === id);\n  console.log(persons)\n  console.log(id)\n  const per = person1[0].id\n  console.log(person1[0].name)\n  console.log(person1[0].id)\n  const deleteit = window.confirm(`Are you sure you want to delete ${person1[0].name}?`)\n      if (deleteit)\n        removeId(per)\n        console.log(`${person1[0].name} successfully deleted`)\n}\n\n\n  \n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={messagenotif} />\n      <form onSubmit={event => handleSubmit(event)}>\n        <div>\n          filter:{\" \"}\n          <input onChange={event =>handleChangeFilter(event)} value={namefilter} />\n        </div>\n        <h1>Add a new </h1>\n        <div>\n          name:{\" \"}\n          <input onChange={event => handleChangeName(event)} value={newName} />\n        </div>\n        <div>\n          number:{\" \"}\n          <input onChange={event => handleChangeNumber(event)} value={newNumber} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      {personsList}\n    </div>\n  );\n};\n\n\nexport default App\n\n\n\n/*{\n  \"name\": \"react-test-app-frontend\",\n  \"version\": \"0.1.0\",\n  \"private\": true,\n  \"dependencies\": {\n    \"@testing-library/jest-dom\": \"^5.14.1\",\n    \"@testing-library/react\": \"^11.2.7\",\n    \"@testing-library/user-event\": \"^12.8.3\",\n    \"axios\": \"^0.21.1\",\n    \"react\": \"^17.0.2\",\n    \"react-dom\": \"^17.0.2\",\n    \"react-scripts\": \"4.0.3\",\n    \"web-vitals\": \"^1.1.2\"\n  },\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\",\n    \"server\": \"json-server -p3001 --watch db.json\"\n  },\n  \"eslintConfig\": {\n    \"extends\": [\n      \"react-app\",\n      \"react-app/jest\"\n    ]\n  },\n  \"browserslist\": {\n    \"production\": [\n      \">0.2%\",\n      \"not dead\",\n      \"not op_mini all\"\n    ],\n    \"development\": [\n      \"last 1 chrome version\",\n      \"last 1 firefox version\",\n      \"last 1 safari version\"\n    ]\n  },\n  \"devDependencies\": {\n    \"json-server\": \"^0.16.3\"\n  }\n}\n*/","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}